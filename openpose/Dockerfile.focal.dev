FROM registry.dev.proneer.co/cuda:11.1.1-cudnn7-devel-ubuntu20.04
MAINTAINER proneer <phillip@proneer.co>

######## Openpose Ubuntu 20.04 Dev ###########

### Image and project labels
LABEL \
    maintainer="proneer <phillip@proneer.co>" \
        org.label-schema.docker.dockerfile="/Dockerfile.focal.dev" \
        org.label-schema.name="Openpose Ubuntu 20.04 Development Image" \
        org.label-schema.url="https://www.proneer.co"

### Technical Environment Variables
ENV \
    USER_GID=0 \
    DEBIAN_FRONTEND=noninteractive \
    RESOURCES_PATH="/resources"

#WORKDIR $RESOURCES_PATH/cmake
#RUN \
#    wget https://github.com/Kitware/CMake/releases/download/v3.19.6/cmake-3.19.6-Linux-x86_64.tar.gz \
#    && tar xzf cmake-3.19.6-Linux-x86_64.tar.gz -C /opt \
#    && rm cmake-3.19.6-Linux-x86_64.tar.gz
#ENV \
#    PATH="/opt/cmake-3.19.0-Linux-x86_64/bin:${PATH}"


### Build compatable version of Cmake
WORKDIR $RESOURCES_PATH/cmake
ENV \
    CMAKE_VERSION="3.19.6"
RUN \
    echo "**** building and installing cmake v$CMAKE_VERSION ****" \
    && apt-get update \
    && apt-get purge -y \
        cmake \
    && apt-get install -y \
        libssl-dev \
    && wget --no-verbose https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-$CMAKE_VERSION.tar.gz  -O ./cmake.tar.gz \
    && tar xfz ./cmake.tar.gz \
    && rm ./cmake.tar.gz \
    && cd ./cmake-$CMAKE_VERSION/ \
    && ./bootstrap && make && make install \
    && ln -s /usr/local/bin/ccmake /usr/bin/ \
    && ln -s /usr/local/bin/cmake /usr/bin/

### Load OpenCV
WORKDIR $RESOURCES_PATH/openpose-docker
ENV \
    OPENCV_VERSION="master"
RUN \
    echo "**** building and installing opencv $OPENCV_VERSION ****" \
    # Clean build directories
    && rm -rf opencv/build \
    && rm -rf opencv_contrib/build \
    # Create directory for installation
    && mkdir installation \
    && mkdir installation/OpenCV-"$OPENCV_VERSION" \
    && ln -s -f ../libv4l1-videodev.h videodev.h \
    && git clone --depth 1 --branch $OPENCV_VERSION https://github.com/opencv/opencv.git ./opencv \
    && git clone --depth 1 --branch $OPENCV_VERSION https://github.com/opencv/opencv_contrib.git ./opencv_contrib

### Build and Install OpenCV
WORKDIR $RESOURCES_PATH/openpose-docker/opencv/build
RUN \
    cmake \
        -D CMAKE_BUILD_TYPE=RELEASE \
        -D CMAKE_INSTALL_PREFIX=/usr/local \
        -D INSTALL_C_EXAMPLES=ON \
        -D INSTALL_PYTHON_EXAMPLES=ON \
        -D WITH_TBB=ON \
        -D WITH_V4L=ON \
        -D WITH_CUDA=ON \
        -D WITH_CUDNN=ON \
        -D OPENCV_DNN_CUDA=ON \
        -D CUDA_ARCH_BIN=8.0 \
        -D ENABLE_FAST_MATH=1 \
        -D CUDA_FAST_MATH=1 \
        -D WITH_CUBLAS=1 \
        -D INSTALL_PYTHON_EXAMPLES=ON \
        -D WITH_V4L=ON \
        -D WITH_GTK=ON \
        -D OPENCV_GENERATE_PKGCONFIG=ON \
        -D OPENCV_PC_FILE_NAME=opencv.pc \
        -D OPENCV_ENABLE_NONFREE=ON \
        -D WITH_GSTREAMER=ON \
        -D WITH_QT=OFF \
        -D WITH_OPENGL=ON \
        -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
        -D BUILD_EXAMPLES=ON \
        .. \
    && make -j$(nproc) && make install

### Load OpenPose
WORKDIR $RESOURCES_PATH/openpose-docker
RUN \
    OPENPOSE_VERSION="master" \
    && echo "**** building and installing openpose $OPENPOSE_VERSION ****" \
    && git clone --depth 1 --branch $OPENPOSE_VERSION https://github.com/CMU-Perceptual-Computing-Lab/openpose.git ./openpose \
    && cd ./openpose \
    && git submodule update --init --recursive --remote

### Build Openpose
WORKDIR $RESOURCES_PATH/openpose-docker/openpose/build  
RUN \
    cmake \
        -D BUILD_PYTHON=ON \
        -D USE_CUDNN=ON \
        -D CUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda \
        -D DOWNLOAD_BODY_MPI_MODEL=ON \
        -D DOWNLOAD_BODY_COCO_MODE=ON \
        .. \
    && make -j `nproc`